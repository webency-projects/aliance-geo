name: alliance-geo

services:
  geo_backend_api:
    container_name: geo_backend_api
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - geo_postgres_db
      - kafka
    networks:
      - geo-network
  
  coordinate_processor:
    container_name: geo_coordinate_processor
    build:
      context: ./coordinate_processor
      dockerfile: Dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - geo-network

  geo_postgres_db:
    container_name: geo_postgres_db
    image: postgis/postgis
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=geo_db
    ports:
      - "6666:5432"
    volumes:
      - geo_db-data:/var/lib/postgresql/data
    networks:
      - geo-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
    
  


volumes:
  geo_db-data:

networks:
  geo-network:
    driver: bridge